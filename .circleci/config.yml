image_config: &image_config

  # make sure to set your Docker Hub username & password in CircleCI,
  # either as project-specific environment variables
  # or as resources in your organization's org-global Context

  IMAGE_NAME: # name your image (no spaces please!)

  IMAGE_TAG: # give your image a tag (no spaces please!)

  # NOTE: if you're modifying this config.yml file manually
  # rather than using the included setup script,
  # make sure you also add the values of your IMAGE_NAME & IMAGE_TAG variables
  # to the `test_image` job (line 55)

  LINUX_VERSION: # DEBIAN_JESSIE, DEBIAN_STRETCH, UBUNTU_TRUSTY, or UBUNTU_XENIAL

  RUBY_VERSION_NUM: # pick a version from https://cache.ruby-lang.org/pub/ruby

  NODE_VERSION_NUM: # pick a version from https://nodejs.org/dist

  PYTHON_VERSION_NUM: # pick a version from https://python.org/ftp/python

  JAVA: # Java options: true, false

  MYSQL_CLIENT: # MySQL options: true, false

  POSTGRES_CLIENT: # Postgres options: true, false

  DOCKERIZE: # Dockerize options: true, false

  BROWSERS: # browser tools (Xvfb, PhantomJS, Firefox, Chrome, Chromedriver): true, false

version: 2
jobs:
  build:
    docker:
    - image: circleci/ruby:2.5.5-stretch-node-browsers
      environment:
        RAILS_ENV: test
        RACK_ENV: test
        DATABASE_URL: postgres://root@localhost:5432/internationalsafety_test
        PAGER: cat
    - image: circleci/postgres:9.6.10-alpine-postgis-ram
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: setup_db
    working_directory: ~/repo
    steps:
    - checkout
    - restore_cache:
        keys:
        - v3-dependencies-{{ checksum "Gemfile.lock" }}
        - v3-dependencies-
    - restore_cache:
        keys:
        - yarn-packages-v3-{{ checksum "yarn.lock" }}
        - yarn-packages-v3-
    - run: gem install bundler -v 1.16.2
    - run:
        name: install dependencies
        command: |
          bundle install --jobs=4 --retry=3 --path vendor/bundle
    - run: yarn install
    - save_cache:
        paths:
        - ./vendor/bundle
        key: v3-dependencies-{{ checksum "Gemfile.lock" }}
    - save_cache:
        paths:
        - ~/.cache/yarn
        key: yarn-packages-v3-{{ checksum "yarn.lock" }}
    - run: bundle exec rails db:create
    - run: bundle exec rails db:structure:load
    - run: NODE_ENV=test bundle exec rails webpacker:compile
    - run:
        name: run rspec specs
        command: |
          mkdir /tmp/test-results
          TEST_FILES="$(circleci tests glob "spec/models/*.rb spec/controllers/*.rb spec/features/*.rb" | circleci tests split --split-by=timings)"

          bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec/rspec.xml \
                            --format progress \
                            $TEST_FILES
    - run:
        name: run jest tests
        command: yarn test --ci --runInBand --reporters=default --reporters=jest-junit
        environment:
          JEST_JUNIT_OUTPUT: /tmp/test-results/junit/js-test-results.xml
    - store_test_results:
        path: /tmp/test-results
    - store_artifacts:
        path: /tmp/test-results
        destination: test-results
workflows:
  version: 2
  workflow:
    jobs:
    - build:
        filters:
          branches:
            only:
            - circleci-updates
            - develop
            - master